---
import { getI18N } from "@/i18n";

const { currentLocale } = Astro;
const i18n = getI18N({ currentLocale });

const HERO_IMAGES = [
  {
    src: "/hero/slider-1.jpg",
    alt: "Calibraci贸n de instrumentos de precisi贸n",
  },
  {
    src: "/hero/slider-2.jpg",
    alt: "Calibraci贸n de instrumentos de precisi贸n",
  },
];
---

<section
  class="relative h-[100vh] w-full flex flex-col items-center justify-center overflow-hidden"
>
  <div class="absolute inset-0 bg-white/30 z-10"/>

  <div class="relative w-full h-screen flex items-center justify-center mt-0 md:mt-10">
    {
      HERO_IMAGES.map((image, index) => (
        <div
          class="hero-slide absolute inset-0 opacity-0 transition-opacity duration-1000 ease-in-out"
          data-index={index}
        >
          <img
            src={image.src}
            alt={image.alt}
            class="absolute inset-0 w-full h-full object-cover md:object-center object-right"
          />
        </div>
      ))
    }

    <div
      class="w-full max-w-7xl mx-auto px-4 relative z-20 md:text-left text-center mt-0 md:mt-6 md:pl-8"
    >
      <div
        class="mb-4 sm:mb-6 md:mb-8 hidden md:flex md:justify-start justify-center"
      >
        <img
          src="/logo-kepler-metrology.png"
          alt="Kepler Metrology"
          class="h-16 sm:h-20 md:h-24  drop-shadow-xl drop-shadow-neutral-400"
        />
      </div>

      <h1
        class="text-5xl md:text-5xl lg:text-6xl font-extrabold mb-3 sm:mb-4 md:mb-6 tracking-tight leading-tight md:mt-0 mt-8 max-w-lg text-neutral-700"
      >
        <span class="">{i18n.HERO.TITLE}</span>
        <span class="block text-orange-600"
          >{i18n.HERO.SUBTITLE}
        </span>
      </h1>

      <p
        class="text-base sm:text-lg md:text-xl mb-6 sm:mb-8 md:mb-10 md:max-w-xl max-w-3xl mx-auto md:mx-0 font-light leading-relaxed drop-shadow-lg"
      >
        {i18n.HERO.DESCRIPTION}
      </p>

      <div
        class="flex flex-col sm:flex-row md:justify-start justify-center gap-3 sm:gap-4 md:mt-0 mt-8"
      >
        <a
          href="#servicios"
          class="bg-white border border-neutral-500 text-primary font-bold py-3 sm:py-4 px-6 sm:px-8 md:px-10 rounded-lg hover:bg-gray-100 text-base sm:text-lg font-expansiva"
        >
          {i18n.HERO.SERVICES_BUTTON}
        </a>
        <a
          href="#contacto"
          class="bg-secondary text-white font-bold py-3 sm:py-4 px-6 sm:px-8 md:px-10 rounded-lg hover:bg-secondary/80 text-base sm:text-lg font-expansiva"
        >
          {i18n.HERO.CONTACT_BUTTON}
        </a>
      </div>
    </div>

    <div
      class="absolute bottom-6 left-1/2 transform -translate-x-1/2 animate-bounce z-20"
    >
      <svg
        xmlns="http://www.w3.org/2000/svg"
        class="size-8 md:size-10 text-white"
        fill="none"
        viewBox="0 0 24 24"
        stroke="currentColor"
      >
        <path
          stroke-linecap="round"
          stroke-linejoin="round"
          stroke-width="2"
          d="M19 14l-7 7m0 0l-7-7m7 7V3"></path>
      </svg>
    </div>
  </div>
</section>

<style>
  .hero-slide {
    z-index: 0;
  }

  .hero-slide.active {
    opacity: 1;
    z-index: 1;
  }

  @media (max-width: 640px) {
    .carousel-indicator.active {
      width: 1rem;
    }
  }

  @keyframes fadeInUp {
    from {
      opacity: 0;
      transform: translateY(20px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  h1,
  p {
    animation: fadeInUp 0.8s ease-out forwards;
  }

  p {
    animation-delay: 0.3s;
  }

  @media (max-width: 360px) {
    h1 {
      font-size: 1.75rem;
    }

    p {
      font-size: 0.875rem;
    }
  }
</style>

<script>
  document.addEventListener("astro:page-load", () => {
    const TRANSITION_TIME = 5000;
    const slides = document.querySelectorAll(".hero-slide");
    let currentSlide = 0;
    let slideInterval;

    function showSlide(index: number) {
      slides.forEach((slide) => slide.classList.remove("active"));
      slides[index].classList.add("active");
    }

    function nextSlide() {
      currentSlide = (currentSlide + 1) % slides.length;
      showSlide(currentSlide);
    }

    if (slideInterval) {
      clearInterval(slideInterval);
    }

    showSlide(0);
    slideInterval = setInterval(nextSlide, TRANSITION_TIME);
  });
</script>
