---
const NAVIGATION_LINKS = [
  { href: "/", text: "Inicio" },
  { href: "/servicios", text: "Servicios" },
  { href: "/nosotros", text: "Nosotros" },
  { href: "/contacto", text: "Contacto" },
];
---

<header class="fixed top-0 z-60 w-screen bg-primary pb-6 backdrop-blur-md">
  <nav
    class="mx-auto flex max-w-6xl items-center justify-between px-4 py-6 pb-0 uppercase lg:px-8"
  >
    <div class="flex">
      <div class="hidden lg:flex lg:gap-x-12">
        {
          NAVIGATION_LINKS.map(({ href, text }) => (
            <a
              href={href}
              class="relative text-sm/6 font-semibold text-white after:absolute after:bottom-[-2px] after:left-0 after:h-1 after:w-0 after:bg-white after:transition-all after:duration-500 hover:after:w-full"
            >
              {text}
            </a>
          ))
        }
      </div>
      <div class="flex lg:hidden">
        <button
          type="button"
          id="open-menu-button"
          class="-m-2.5 inline-flex cursor-pointer items-center justify-center rounded-md p-2.5 text-white transition-all duration-300 will-change-transform hover:scale-150"
        >
          <span class="sr-only">Abrir Menú Principal</span>
          <svg
            class="size-6"
            fill="none"
            viewBox="0 0 24 24"
            stroke-width="1.5"
            stroke="currentColor"
            aria-hidden="true"
            data-slot="icon"
          >
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              d="M3.75 6.75h16.5M3.75 12h16.5m-16.5 5.25h16.5"></path>
          </svg>
        </button>
      </div>
    </div>

    <div class="flex flex-1 justify-end">
      <div class="relative flex flex-col items-end">
        <a href="/" class="flex items-center">
          <div class="bg-white p-2 rounded-lg w-fit">
            <img
              src="/logo-kepler-metrology.png"
              alt="Kepler Metrology Logo"
              class="h-10"
            />
          </div>
        </a>
      </div>
    </div>
  </nav>
  <dialog
    class="bg-primary z-50 h-full w-full max-w-full translate-x-0 transition-discrete duration-300 lg:hidden starting:-translate-x-full [&:not([open])]:-translate-x-full min-h-screen"
    id="mobile-menu"
    role="dialog"
    aria-modal="true"
  >
    <div class="z-10 h-screen flex flex-col px-6 py-6">
      <div class="flex items-center justify-between">
        <a href="/" class="flex items-center">
          <div class="bg-white p-2 rounded-lg w-fit">
            <img
              src="/logo-kepler-metrology.png"
              alt="Kepler Metrology Logo"
              class="h-8"
            />
          </div>
        </a>
        <button
          type="button"
          id="close-menu-button"
          class="-m-2.5 cursor-pointer p-2.5 text-white transition-all duration-300 ease-in will-change-transform hover:scale-150"
        >
          <span class="sr-only">Cerrar Menú</span>
          <svg
            class="size-6"
            fill="none"
            viewBox="0 0 24 24"
            stroke-width="1.5"
            stroke="currentColor"
            aria-hidden="true"
            data-slot="icon"
          >
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              d="M6 18 18 6M6 6l12 12"></path>
          </svg>
        </button>
      </div>
      <div class="flex-1 flex flex-col items-center justify-center space-y-6">
        {
          NAVIGATION_LINKS.map(({ href, text }) => (
            <a
              href={href}
              class="hover:text-primary-light border-primary-light -mx-3 block rounded-lg p-4 py-3 text-xl font-semibold text-white hover:bg-white/10 text-center w-3/4 hover:scale-110 transition-all duration-300"
            >
              {text}
            </a>
          ))
        }
      </div>
    </div>
  </dialog>
</header>

<div id="backdrop"></div>

<script>
  // Get the menu elements
  const mobileMenu = document.getElementById(
    "mobile-menu",
  ) as HTMLDialogElement;
  const openMenuButton = document.getElementById("open-menu-button");
  const closeMenuButton = document.getElementById("close-menu-button");
  const mobileItems = mobileMenu.querySelectorAll("a");

  const toggleMenu = () => {
    mobileMenu.open ? mobileMenu.close() : mobileMenu.showModal();
  };

  openMenuButton?.addEventListener("click", toggleMenu);
  closeMenuButton?.addEventListener("click", toggleMenu);

  document.addEventListener("click", (event) => {
    const isClickInsideMenu = mobileMenu.contains(event.target as Node);
    const isClickInsideButton = openMenuButton?.contains(event.target as Node);

    if (isClickInsideMenu && !isClickInsideButton) {
      mobileMenu.close();
    }
  });

  mobileItems?.forEach((item) => item.addEventListener("click", toggleMenu));
</script>

<style>
  @reference "../styles/global.css";
</style>
